<apex:component id="googleInput">
    <apex:attribute access="public" description="Case record" id="caseRecord" name="caseRecord" required="true" type="Case"/>    
       
    <apex:outputText >
        <div class="col-md-12 ondemandField formLabel locOfIncident rmsCategorySpecific" style="display:none;">
            <label class="fieldLabel" style="margin-bottom: 0px;" aria-label="Location of incident" for="sitePageId:caseFormId:pblockId:locationMap:googleMap:optional-location">Where did this occur?</label>
            <div id="locationError"  class="has-error errorMessage"></div>
        </div>
        <div class="col-md-12 ondemandField locOfIncident rmsCategorySpecific" style="display:none;" >        
           <p style="margin-bottom: 0px;text-align: justify;">If you witnessed or experienced an incident, enter the location below. </p>
        </div>
    </apex:outputText>
    
    <apex:inputField id="autocompleteGoogleInput"  styleClass="ondemandField rmsCategorySpecific locOfIncident formInput address-field" html-placeholder="Enter location here" value="{!caseRecord.Location_of_Incident__c}"/>   
     
    <script>
    var placeSearch, autocompleteInput;
    
    function initAutocompleteGoogleInput() {
        console.log("In initAutocompleteGoogleInput");
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocompleteInput = new google.maps.places.Autocomplete(document.getElementById('sitePageId:caseFormId:pblockId:locationInput:googleInput:autocompleteGoogleInput'),
            {types: ['geocode']});


      }


      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocateInput() {
      console.log("In geolocateInput");

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocompleteInput.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <style>
    .sprite-currentLoc {
        width: 40px;
        height: 40px;
        background-position: -7px -7px;
        border-radius: 5%;
    }
    </style>
</apex:component>